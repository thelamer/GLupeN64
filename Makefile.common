RSPDIR             = $(ROOT_DIR)/mupen64plus-rsp-hle
CORE_DIR           = $(ROOT_DIR)/mupen64plus-core
LIBRETRO_COMM_DIR  = $(ROOT_DIR)/libretro-common
AUDIO_LIBRETRO_DIR = $(ROOT_DIR)/custom/mupen64plus-core/plugin/audio_libretro
VIDEODIR_GLIDEN64  = $(ROOT_DIR)/GLideN64
GLSL_OPT_DIR       = $(ROOT_DIR)/glsl-optimizer

DYNAREC_USED := 0

INCFLAGS += \
	-I$(ROOT_DIR)/custom \
	-I$(ROOT_DIR)/custom/mupen64plus-core \
	-I$(CORE_DIR)/src \
	-I$(CORE_DIR)/src/api \
	-I$(AUDIO_LIBRETRO_DIR) \
	-I$(LIBRETRO_COMM_DIR)/include \
	-I$(LIBRETRO_DIR) \
	-I$(VIDEODIR_GLIDEN64)/src \
	-I$(VIDEODIR_GLIDEN64)/src/osal \
	-I$(ROOT_DIR)/custom/GLideN64 \
	-I$(ROOT_DIR)/custom/glsl-optimizer \
	-I$(GLSL_OPT_DIR)/src/glsl \
	-I$(GLSL_OPT_DIR)/include \
	-I$(GLSL_OPT_DIR)/src \
	-I$(GLSL_OPT_DIR)/src/mesa

# libco
SOURCES_C += $(LIBRETRO_COMM_DIR)/libco/libco.c

SOURCES_C += \
	$(RSPDIR)/src/alist.c \
	$(RSPDIR)/src/alist_audio.c \
	$(RSPDIR)/src/alist_naudio.c \
	$(RSPDIR)/src/alist_nead.c \
	$(RSPDIR)/src/audio.c \
	$(RSPDIR)/src/cicx105.c \
	$(RSPDIR)/src/hle.c \
	$(RSPDIR)/src/jpeg.c \
	$(RSPDIR)/src/memory.c \
	$(RSPDIR)/src/mp3.c \
	$(RSPDIR)/src/musyx.c \
	$(ROOT_DIR)/custom/mupen64plus-rsp-hle/plugin.c

# Core
SOURCES_C += \
	$(CORE_DIR)/src/ai/ai_controller.c \
	$(CORE_DIR)/src/api/callbacks.c \
	$(CORE_DIR)/src/api/common.c \
	$(ROOT_DIR)/custom/mupen64plus-core/api/config.c \
	$(CORE_DIR)/src/api/debugger.c \
	$(ROOT_DIR)/custom/mupen64plus-core/api/vidext_libretro.c \
	$(ROOT_DIR)/custom/mupen64plus-core/main/main.c \
	$(ROOT_DIR)/custom/mupen64plus-core/api/frontend_libretro.c \
	$(CORE_DIR)/src/main/util.c \
	$(CORE_DIR)/src/main/eep_file.c \
	$(CORE_DIR)/src/main/fla_file.c \
	$(CORE_DIR)/src/main/md5.c \
	$(CORE_DIR)/src/main/mpk_file.c \
	$(CORE_DIR)/src/main/profile.c \
	$(CORE_DIR)/src/main/rom.c \
	$(ROOT_DIR)/custom/mupen64plus-core/main/savestates_libretro.c \
	$(CORE_DIR)/src/main/sra_file.c \
	$(CORE_DIR)/src/memory/memory.c \
	$(CORE_DIR)/src/pi/cart_rom.c \
	$(CORE_DIR)/src/pi/flashram.c \
	$(CORE_DIR)/src/pi/pi_controller.c \
	$(CORE_DIR)/src/pi/sram.c \
	$(CORE_DIR)/src/plugin/get_time_using_C_localtime.c \
	$(CORE_DIR)/src/plugin/rumble_via_input_plugin.c \
	$(ROOT_DIR)/custom/mupen64plus-core/plugin/plugin_libretro.c \
	$(CORE_DIR)/src/plugin/dummy_video.c \
	$(CORE_DIR)/src/plugin/dummy_audio.c \
	$(CORE_DIR)/src/plugin/dummy_input.c \
	$(CORE_DIR)/src/plugin/dummy_rsp.c \
	$(CORE_DIR)/src/r4300/r4300.c \
	$(CORE_DIR)/src/r4300/cached_interp.c \
	$(CORE_DIR)/src/r4300/cp0.c \
	$(CORE_DIR)/src/r4300/cp1.c \
	$(CORE_DIR)/src/r4300/exception.c \
	$(CORE_DIR)/src/r4300/instr_counters.c \
	$(ROOT_DIR)/custom/mupen64plus-core/r4300/interupt.c \
	$(CORE_DIR)/src/r4300/mi_controller.c \
	$(CORE_DIR)/src/r4300/pure_interp.c \
	$(CORE_DIR)/src/r4300/r4300_core.c \
	$(CORE_DIR)/src/r4300/recomp.c \
	$(CORE_DIR)/src/r4300/reset.c \
	$(CORE_DIR)/src/r4300/tlb.c \
	$(CORE_DIR)/src/rdp/fb.c \
	$(CORE_DIR)/src/rdp/rdp_core.c \
	$(CORE_DIR)/src/ri/rdram.c \
	$(CORE_DIR)/src/ri/rdram_detection_hack.c \
	$(CORE_DIR)/src/ri/ri_controller.c \
	$(CORE_DIR)/src/rsp/rsp_core.c \
	$(CORE_DIR)/src/si/af_rtc.c \
	$(CORE_DIR)/src/si/cic.c \
	$(CORE_DIR)/src/si/eeprom.c \
	$(CORE_DIR)/src/si/game_controller.c \
	$(CORE_DIR)/src/si/mempak.c \
	$(CORE_DIR)/src/si/n64_cic_nus_6105.c \
	$(CORE_DIR)/src/si/pif.c \
	$(CORE_DIR)/src/si/rumblepak.c \
	$(CORE_DIR)/src/si/si_controller.c \
	$(CORE_DIR)/src/vi/vi_controller.c

ifneq (,$(findstring win,$(platform)))
	SOURCES_C += $(CORE_DIR)/src/osal/files_win32.c
else
	SOURCES_C += $(CORE_DIR)/src/osal/files_unix.c
endif

### DYNAREC ###
ifdef WITH_DYNAREC

ifeq ($(WITH_DYNAREC), arm)
	DYNAREC_USED = 1
	DYNAFLAGS += -DNEW_DYNAREC=3
	SOURCES_C += \
		$(CORE_DIR)/src/r4300/new_dynarec/new_dynarec.c \
		$(CORE_DIR)/src/r4300/empty_dynarec.c \
		$(CORE_DIR)/src/r4300/new_dynarec/arm/arm_cpu_features.c

	SOURCES_ASM += \
		$(CORE_DIR)/src/r4300/new_dynarec/arm/linkage_arm.S
endif
ifeq ($(WITH_DYNAREC), x86)
	DYNAREC_USED = 1
	DYNAFLAGS += -DNEW_DYNAREC=1
	SOURCES_C += \
		$(CORE_DIR)/src/r4300/new_dynarec/new_dynarec.c \
		$(CORE_DIR)/src/r4300/empty_dynarec.c \

	SOURCES_NASM += \
		$(CORE_DIR)/src/r4300/new_dynarec/x86/linkage_x86.asm
endif
ifeq ($(WITH_DYNAREC), $(filter $(WITH_DYNAREC), x86_64 x64))
	DYNAREC_USED = 1
	SOURCES_C += $(CORE_DIR)/src/r4300/x86_64/assemble.c \
		$(CORE_DIR)/src/r4300/x86_64/gbc.c \
		$(CORE_DIR)/src/r4300/x86_64/gcop0.c \
		$(CORE_DIR)/src/r4300/x86_64/gcop1.c \
		$(CORE_DIR)/src/r4300/x86_64/gcop1_d.c \
		$(CORE_DIR)/src/r4300/x86_64/gcop1_l.c \
		$(CORE_DIR)/src/r4300/x86_64/gcop1_s.c \
		$(CORE_DIR)/src/r4300/x86_64/gcop1_w.c \
		$(CORE_DIR)/src/r4300/x86_64/gr4300.c \
		$(CORE_DIR)/src/r4300/x86_64/gregimm.c \
		$(CORE_DIR)/src/r4300/x86_64/gspecial.c \
		$(CORE_DIR)/src/r4300/x86_64/gtlb.c \
		$(CORE_DIR)/src/r4300/x86_64/regcache.c \
		$(CORE_DIR)/src/r4300/x86_64/rjump.c
endif
ifeq ($(DYNAREC_USED),0)
	SOURCES_C += $(CORE_DIR)/src/r4300/empty_dynarec.c
else
	DYNAFLAGS += -DDYNAREC
endif
endif

# Libretro

ifeq ($(HAVE_OPENGL),1)
SOURCES_C += $(ROOT_DIR)/custom/glsm/glsm.c
endif

SOURCES_C += $(LIBRETRO_DIR)/libretro.c \
	$(ROOT_DIR)/custom/mupen64plus-core/plugin/emulate_game_controller_via_libretro.c \
	$(AUDIO_LIBRETRO_DIR)/audio_backend_libretro.c \
	$(AUDIO_LIBRETRO_DIR)/audio_resampler_driver.c \
	$(AUDIO_LIBRETRO_DIR)/drivers_resampler/sinc_resampler.c \
	$(AUDIO_LIBRETRO_DIR)/drivers_resampler/cc_resampler.c 

SOURCES_CXX   += \
	$(VIDEODIR_GLIDEN64)/src/Combiner.cpp \
	$(ROOT_DIR)/custom/GLideN64/CommonPluginAPI.cpp \
	$(VIDEODIR_GLIDEN64)/src/Config.cpp \
	$(VIDEODIR_GLIDEN64)/src/CRC.cpp \
	$(VIDEODIR_GLIDEN64)/src/DepthBuffer.cpp \
	$(VIDEODIR_GLIDEN64)/src/F3D.cpp \
	$(VIDEODIR_GLIDEN64)/src/F3DDKR.cpp \
	$(VIDEODIR_GLIDEN64)/src/F3DEX.cpp \
	$(VIDEODIR_GLIDEN64)/src/F3DPD.cpp \
	$(VIDEODIR_GLIDEN64)/src/F3DWRUS.cpp \
	$(VIDEODIR_GLIDEN64)/src/F3DSWSE.cpp \
	$(VIDEODIR_GLIDEN64)/src/F3DEX2.cpp \
	$(VIDEODIR_GLIDEN64)/src/F3DEX2CBFD.cpp \
	$(VIDEODIR_GLIDEN64)/src/FBOTextureFormats.cpp \
	$(VIDEODIR_GLIDEN64)/src/FrameBuffer.cpp \
	$(VIDEODIR_GLIDEN64)/src/FrameBufferInfo.cpp \
	$(VIDEODIR_GLIDEN64)/src/GBI.cpp \
	$(VIDEODIR_GLIDEN64)/src/gDP.cpp \
	$(VIDEODIR_GLIDEN64)/src/GLideN64.cpp \
	$(VIDEODIR_GLIDEN64)/src/gSP.cpp \
	$(VIDEODIR_GLIDEN64)/src/Keys.cpp \
	$(VIDEODIR_GLIDEN64)/src/L3D.cpp \
	$(VIDEODIR_GLIDEN64)/src/L3DEX2.cpp \
	$(VIDEODIR_GLIDEN64)/src/L3DEX.cpp \
	$(VIDEODIR_GLIDEN64)/src/N64.cpp \
	$(VIDEODIR_GLIDEN64)/src/OpenGL.cpp \
	$(VIDEODIR_GLIDEN64)/src/RDP.cpp \
	$(VIDEODIR_GLIDEN64)/src/RSP.cpp \
	$(VIDEODIR_GLIDEN64)/src/S2DEX2.cpp \
	$(VIDEODIR_GLIDEN64)/src/S2DEX.cpp \
	$(VIDEODIR_GLIDEN64)/src/Turbo3D.cpp \
	$(VIDEODIR_GLIDEN64)/src/ZSort.cpp \
	$(VIDEODIR_GLIDEN64)/src/ShaderUtils.cpp \
	$(VIDEODIR_GLIDEN64)/src/SoftwareRender.cpp \
	$(VIDEODIR_GLIDEN64)/src/Textures.cpp \
	$(VIDEODIR_GLIDEN64)/src/TextDrawerStub.cpp \
	$(VIDEODIR_GLIDEN64)/src/TextureFilterHandler.cpp \
	$(VIDEODIR_GLIDEN64)/src/PostProcessor.cpp \
	$(VIDEODIR_GLIDEN64)/src/VI.cpp \
	$(VIDEODIR_GLIDEN64)/src/BufferCopy/ColorBufferToRDRAM.cpp \
	$(VIDEODIR_GLIDEN64)/src/BufferCopy/DepthBufferToRDRAM.cpp \
	$(VIDEODIR_GLIDEN64)/src/BufferCopy/RDRAMtoColorBuffer.cpp \
	$(VIDEODIR_GLIDEN64)/src/DepthBufferRender/ClipPolygon.cpp \
	$(VIDEODIR_GLIDEN64)/src/DepthBufferRender/DepthBufferRender.cpp \
	$(VIDEODIR_GLIDEN64)/src/GLUniforms/UniformSet.cpp \
	$(VIDEODIR_GLIDEN64)/src/common/CommonAPIImpl_common.cpp \
	$(ROOT_DIR)/custom/GLideN64/MupenPlusPluginAPI.cpp \
	$(VIDEODIR_GLIDEN64)/src/TxFilterStub.cpp \
	$(ROOT_DIR)/custom/GLideN64/mupenplus/Config_mupenplus.cpp \
	$(ROOT_DIR)/custom/GLideN64/mupenplus/OpenGL_mupenplus.cpp \
	$(ROOT_DIR)/custom/GLideN64/mupenplus/CommonAPIImpl_mupenplus.cpp

ifeq ($(HAVE_NEON),1)
	SOURCES_CXX   += $(VIDEODIR_GLIDEN64)/src/3DMathNeon.cpp \
		$(VIDEODIR_GLIDEN64)/src/gSPNeon.cpp

	SOURCES_ASM += $(LIBRETRO_COMM_DIR)/conversion/float_to_s16_neon.S \
		$(LIBRETRO_COMM_DIR)/conversion/s16_to_float_neon.S \
		$(AUDIO_LIBRETRO_DIR)/drivers_resampler/sinc_resampler_neon.S \
		$(AUDIO_LIBRETRO_DIR)/drivers_resampler/cc_resampler_neon.S
else
	SOURCES_CXX   += $(VIDEODIR_GLIDEN64)/src/3DMath.cpp
endif

ifeq ($(HAVE_OPENGL),1)
ifeq ($(GLES),1)
	GLFLAGS += -DHAVE_OPENGLES -DHAVE_OPENGLES2 -DGLES2
	SOURCES_CXX += $(VIDEODIR_GLIDEN64)/src/GLES2/GLSLCombiner_gles2.cpp \
		$(VIDEODIR_GLIDEN64)/src/BufferCopy/ColorBufferToRDRAMStub.cpp \
		$(VIDEODIR_GLIDEN64)/src/convert.cpp
else ifeq ($(GLES3),1)
	GLFLAGS += -DHAVE_OPENGLES -DHAVE_OPENGLES3 -DGLES3
	SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/glsym_es3.c
	SOURCES_CXX +=  $(VIDEODIR_GLIDEN64)/src/OGL3X/GLSLCombiner_ogl3x.cpp \
		$(VIDEODIR_GLIDEN64)/src/BufferCopy/ColorBufferToRDRAM_GL.cpp
else
	GLFLAGS += -DHAVE_OPENGL -DCORE
	SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/glsym_gl.c
	SOURCES_CXX +=  $(VIDEODIR_GLIDEN64)/src/OGL3X/GLSLCombiner_ogl3x.cpp \
		$(VIDEODIR_GLIDEN64)/src/BufferCopy/ColorBufferToRDRAM_GL.cpp
endif
SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/rglgen.c
endif

#GLSL OPT
ifeq ($(GLES),1)
GLSL_OPT = 1
else ifeq ($(GLES3),1)
GLSL_OPT = 1
endif

ifeq ($(GLSL_OPT),1)

SETUP_GLSL:=$(shell sh ./glsl-optimizer/glsl_setup.sh)

SOURCES_C += \
	$(GLSL_OPT_DIR)/src/glsl/glcpp/glcpp-lex.c \
	$(GLSL_OPT_DIR)/src/glsl/glcpp/pp.c \
	$(GLSL_OPT_DIR)/src/glsl/glcpp/glcpp-parse.c \
	$(GLSL_OPT_DIR)/src/util/ralloc.c \
	$(GLSL_OPT_DIR)/src/util/hash_table.c \
	$(GLSL_OPT_DIR)/src/mesa/program/symbol_table.c \
	$(GLSL_OPT_DIR)/src/mesa/program/prog_hash_table.c \
	$(GLSL_OPT_DIR)/src/mesa/main/imports.c \
	$(GLSL_OPT_DIR)/src/glsl/strtod.c

SOURCES_CXX += \
	$(GLSL_OPT_DIR)/src/glsl/opt_copy_propagation_elements.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_constant_folding.cpp \
	$(GLSL_OPT_DIR)/src/glsl/s_expression.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_constant_propagation.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_ubo_reference.cpp \
	$(GLSL_OPT_DIR)/src/glsl/glsl_parser.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_variable_index_to_cond_assign.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_function_can_inline.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_unused_structs.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_print_visitor.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_constant_expression.cpp \
	$(GLSL_OPT_DIR)/src/glsl/glsl_parser_extras.cpp \
	$(GLSL_OPT_DIR)/src/glsl/hir_field_selection.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_noise.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_dead_code_local.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_if_simplification.cpp \
	$(GLSL_OPT_DIR)/src/glsl/builtin_types.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_vector_insert.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_packing_builtins.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ast_to_hir.cpp \
	$(GLSL_OPT_DIR)/src/glsl/link_uniforms.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_vector.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_equals.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_builder.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_redundant_jumps.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_validate.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_vectorize.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_rvalue_visitor.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_expression_flattening.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_tree_grafting.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_noop_swizzle.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_clip_distance.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_import_prototypes.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_vertex_id.cpp \
	$(GLSL_OPT_DIR)/src/glsl/link_atomics.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_rebalance_tree.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_minmax.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_dead_builtin_variables.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_vec_index_to_swizzle.cpp \
	$(GLSL_OPT_DIR)/src/glsl/loop_unroll.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_dead_code.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ast_expr.cpp \
	$(GLSL_OPT_DIR)/src/glsl/loop_controls.cpp \
	$(GLSL_OPT_DIR)/src/glsl/linker.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_function_inlining.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_mat_op_to_vec.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_function_detect_recursion.cpp \
	$(ROOT_DIR)/custom/glsl-optimizer/glsl_optimizer.cpp \
	$(GLSL_OPT_DIR)/src/glsl/link_uniform_blocks.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_swizzle_swizzle.cpp \
	$(GLSL_OPT_DIR)/src/glsl/link_functions.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_output_reads.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_function.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_named_interface_blocks.cpp \
	$(GLSL_OPT_DIR)/src/glsl/loop_analysis.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_stats.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_algebraic.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_variable_refcount.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ast_array_index.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_hierarchical_visitor.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_cse.cpp \
	$(GLSL_OPT_DIR)/src/glsl/builtin_variables.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ast_type.cpp \
	$(GLSL_OPT_DIR)/src/glsl/link_varyings.cpp \
	$(GLSL_OPT_DIR)/src/glsl/glsl_types.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_dead_builtin_varyings.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_print_glsl_visitor.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_print_metal_visitor.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_offset_array.cpp \
	$(GLSL_OPT_DIR)/src/glsl/link_uniform_initializers.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_constant_variable.cpp \
	$(GLSL_OPT_DIR)/src/glsl/builtin_functions.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ast_function.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_dead_functions.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_basic_block.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_if_to_cond_assign.cpp \
	$(GLSL_OPT_DIR)/src/glsl/link_interface_blocks.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_structure_splitting.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_vec_index_to_cond_assign.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_hv_accept.cpp \
	$(GLSL_OPT_DIR)/src/glsl/ir_clone.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_flip_matrices.cpp \
	$(GLSL_OPT_DIR)/src/glsl/standalone_scaffolding.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_array_splitting.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_discard.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_packed_varyings.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_discard_flow.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_copy_propagation.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_jumps.cpp \
	$(GLSL_OPT_DIR)/src/glsl/lower_instructions.cpp \
	$(GLSL_OPT_DIR)/src/glsl/glsl_lexer.cpp \
	$(GLSL_OPT_DIR)/src/glsl/link_uniform_block_active_visitor.cpp \
	$(GLSL_OPT_DIR)/src/glsl/opt_flatten_nested_if_blocks.cpp \
	$(GLSL_OPT_DIR)/src/glsl/glsl_symbol_table.cpp
endif
